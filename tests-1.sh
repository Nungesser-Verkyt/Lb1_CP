#!/bin/bash


echo "Скрипт-навигатор по файловой системе."
echo "Разработчик скрипта: Нунгесснр Эдуард (группа 737-1)"
echo "Этот скрипт посзволяет пользователю перемещаться по файловой системе устройства."
echo "О возможностях данного скрипта вы сможете узнать из справочника."
echo

#Начало кода справочника для чайников.
echo -n "Вы хотите посмотреть справочник по программе? (y/N) "
echo

read you
case "$you" in

y|Y) echo "Ввели «y», продолжаем..."
     echo "   Справочник по программе."
     echo "В данной программе реализованны навигационные действия в файловой системе."
     echo "   Дейстия доступные пользователю:"
     echo " 0 - Показать Справочник по программе; "
     echo " 1 - Показать текущий каталог пользователю $(whoami):"
     echo " 2 - Подняться на каталог выше текущего каталога;"
     echo " 3 - Перейти в каталог видимых через команду ls."
     echo
;;

n|N) echo "Ввели «n», переходим к основной программе ..."
     echo
;;
#Ситуация при неправильном вводе запускается как при п
*) echo
   echo "Ничего не ввели или ввели не праильные значения. Выполняем действие по умолчанию..."
;;
esac

#Код основной работы программы , пользователь вводит номер действия , через нужный иф входной параметр работает
echo "Приветствую вас $(whoami) в программе навигаторе."
echo
echo "Выберите одно из доступных действий."
echo " Если  вы  не знакомы со списком действие введите 0 при выборе ниже."


#Начало цикла, он закончится только если пользователь в конце тела цикла выведит п при вопоосе о продолжении работы
while true; do
    echo
    read -p  "  Выберите действие, которе вам необходимо: " var
    echo
    echo " Вы выбрали действие под номером $var"
    echo
    case "$var" in

    "0")       #Если пользователю интересно команды программы, но пропустил справочник он выбирает 0 - описание основных действий.
      echo "   Справочник по программе."
         echo "   В данной программе реализованны навигационные действия в файловой системе."
         echo "   Дейстия доступные пользователю:"
         echo " 1 - Показать текущий каталог пользователю $(whoami); "
         echo " 2 - Подняться на каталог выше текущего каталога;"
         echo " 3 - Перейти в каталог видимых через команду ls."
         echo
         continue
     ;;

     "1")      #стандартное действие вывода информации о текущем каталоге.
         echo "Выбрано действие вывода информации о текущем каталоге."
         echo "Текущая папка: $(pwd) "
         echo
     ;;

     "2")      #переход в родительскую директорию из текщего каталога.
          echo "Вы выбрали действие подняться на каталог выше."
         cd ..
     ;;

     "3")     #Ситуация когда нужно перейти в другой каталог, мы сможем перейти в каталоги которые видны через ls
              #Тут есть проверка на существование каталога который указал пользователь
        echo "Вам предложен список каталогов, в которые вы можете перейти: "
         ls
         echo "$ls"
         read -p "Выберите и введите каталог, в который хотите перейти: " puti
         if [ -d $puti ];

         then
             echo "Переход в выбранный каталог ..."
             cd $puti
             echo "Переход успешен."
             echo "Вы в папке : $(pwd)"
         else
             echo "Такого  каталога не существует."
             echo
         fi
     ;;

     *)         #Ситуация когда пользователь тестирует, или случайно вводит значения
                  # отличные от 0, 1, 2 и 3.
                  #прекращает текущ итерацию и запускает новую
        echo "Ошибка при вводе номера действия"
        echo "Вы не выбрали дествие или неправильно ввели номер действия."
        echo
      esac

#Основная часть работы программы -- вопрос о продолжении работы. nри этом если пользователь введёт п то вся программа
#заканчивает работу -- так как пользователь больше не хочет работать.
    read -p " Продолжить работу(Y/n): " next
      if [ "$next" = "n" ]; then
        break
      fi
done
